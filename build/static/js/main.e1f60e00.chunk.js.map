{"version":3,"sources":["components/Home/FeaturesCard.js","components/Home/Jumbotron.js","components/Home/Home.js","config.js","components/Maps/GeoLocationButton.js","components/Maps/SearchAutoComplete.js","components/Maps/Maps.js","components/Statistics/summary_data_columns.js","components/Statistics/data_line.js","components/Statistics/prediction_data_columns.js","components/Statistics/prediction_data.js","components/Statistics/Statistics.js","components/About/ContributorCard.js","components/About/About.js","components/Navbar/Navbar.js","components/Footer/Footer.js","App.js","index.js"],"names":["FeaturesCard","props","md","className","wide","cascade","iconClass","cardTitle","cardText","Jumbotron","backgroundImage","process","style","sm","lg","end","globalData","TotalRecovered","TotalConfirmed","TotalDeaths","Home","useState","NewConfirmed","NewDeaths","NewRecovered","setGlobalData","useEffect","setTimeout","fetch","then","res","json","Global","GeolocationButton","onClick","bottom","borderRadius","padding","color","SearchAutoComplete","query","onQueryChange","onSuggestionClicked","autocompleteData","autocompleteKey","searchSuggestions","setSearchSuggestions","length","top5match","str","arr","key","charAt","toUpperCase","slice","p","Array","from","reduce","a","v","i","substr","regex","RegExp","filter","elem","match","onSuggestionClick","e","width","maxWidth","icon","type","placeholder","aria-label","value","onChange","map","searchSuggestion","countryInfo","_id","id","JSON","stringify","DEFAULT","country","lat","long","features","properties","geometry","coordinates","Maps","searchQuery","setSearchQuery","currentPosition","setCurrentPosition","currentCountry","setCurrentCountry","geoJSON","setGeoJSON","countryBubble","setCountryBubble","countries","setCountries","setGPSLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","console","log","request","data","catch","event","target","autocompleteEvent","parse","Map","center","zoom","TileLayer","url","attribution","Marker","position","feature","cases","Popup","onClose","label","field","sort","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","columns","rows","Country","WND","TEMP","THREAT_LEVEL","Statistics","Countries","summaryData","setSummaryData","summaryDataColumns","dataLine","options","responsive","scrollY","scrollX","maxHeight","striped","bordered","small","prediction","ContributorCard","hover","overlay","src","image","alt","title","subtitle","About","Navbar","setState","collapse","state","isWideEnough","pathname","this","fixed","dark","transparent","expand","scrolling","href","isOpen","navbar","right","active","to","Component","Footer","fluid","Date","getFullYear","App","useLocation","spacingClasses","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1f60e00.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n\tMDBCol,\r\n\tMDBCardTitle,\r\n\tMDBCard,\r\n\tMDBCardBody,\r\n\tMDBCardText\r\n} from 'mdbreact'\r\n\r\nconst FeaturesCard = props => {\r\n\treturn (\r\n\t\t<MDBCol md='4' className='my-2'>\r\n\t\t\t<MDBCard wide cascade className='h-100'>\r\n\t\t\t\t<MDBCardBody cascade className='text-center'>\r\n\t\t\t\t\t<MDBCardTitle className='card-title'>\r\n\t\t\t\t\t\t<i className={`fa-3x ${props.iconClass}`}></i>\r\n\t\t\t\t\t</MDBCardTitle>\r\n\r\n\t\t\t\t\t<p className='font-weight-bold text-blue text-uppercase'>{props.cardTitle}</p>\r\n\r\n\t\t\t\t\t<MDBCardText>{props.cardText}</MDBCardText>\r\n\t\t\t\t</MDBCardBody>\r\n\t\t\t</MDBCard>\r\n\t\t</MDBCol>\r\n\t)\r\n}\r\n\r\nexport default FeaturesCard\r\n","import React from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact'\r\nimport Counter from 'react-countup'\r\n\r\nimport './Jumbotron.css'\r\n\r\nconst Jumbotron = props => {\r\n\tconst backgroundImage = `url('${process.env.PUBLIC_URL}/assets/img/jumbotron.png')`\r\n\r\n\treturn (\r\n\t\t<div style={{ backgroundImage }} className='jumbotron-full'>\r\n\t\t\t<div className='d-flex align-items-center jumbotron-full-overlay'>\r\n\t\t\t\t<div className='w-100 h-100 text-light'>\r\n\t\t\t\t\t<MDBContainer className='headings'>\r\n\t\t\t\t\t\t<MDBRow>\r\n\t\t\t\t\t\t\t<MDBCol>\r\n\t\t\t\t\t\t\t\t<h1>People are suffering around the world</h1>\r\n\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t</MDBRow>\r\n\t\t\t\t\t</MDBContainer>\r\n\t\t\t\t\t<MDBContainer>\r\n\t\t\t\t\t\t<MDBRow>\r\n\t\t\t\t\t\t\t<MDBCol sm='3' lg='2'>\r\n\t\t\t\t\t\t\t\t<h3 className='text-success'>\r\n\t\t\t\t\t\t\t\t\t<Counter end={props.globalData.TotalRecovered} />\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<h6 className='text-success'>Recovered</h6>\r\n\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t<MDBCol sm='3' lg='2'>\r\n\t\t\t\t\t\t\t\t<h3 className='text-warning'>\r\n\t\t\t\t\t\t\t\t\t<Counter end={props.globalData.TotalConfirmed} />\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<h6 className='text-warning'>Confirmed</h6>\r\n\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t<MDBCol sm='3' lg='2'>\r\n\t\t\t\t\t\t\t\t<h3 className='text-danger'>\r\n\t\t\t\t\t\t\t\t\t<Counter end={props.globalData.TotalDeaths} />\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<h6 className='text-danger'>death</h6>\r\n\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t<MDBCol sm='3' lg='2'>\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t<Counter end={props.globalData.TotalDeaths / 2} />\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<h6>Critical</h6>\r\n\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t</MDBRow>\r\n\t\t\t\t\t</MDBContainer>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Jumbotron\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n\tMDBContainer,\r\n\tMDBRow,\r\n\tMDBCardTitle,\r\n\tMDBCard,\r\n\tMDBCardBody\r\n} from 'mdbreact'\r\n\r\nimport { API_COVID19_SUMMARY } from '../../config'\r\nimport FeaturesCard from './FeaturesCard'\r\nimport Jumbotron from './Jumbotron'\r\n\r\nconst Home = props => {\r\n\tconst [globalData, setGlobalData] = useState({\r\n\t\tNewConfirmed: 135514,\r\n\t\tTotalConfirmed: 6149975,\r\n\t\tNewDeaths: 4355,\r\n\t\tTotalDeaths: 376268,\r\n\t\tNewRecovered: 71158,\r\n\t\tTotalRecovered: 2564042\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(\r\n\t\t\t() =>\r\n\t\t\t\tfetch(API_COVID19_SUMMARY)\r\n\t\t\t\t\t.then(res => res.json())\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tsetGlobalData(res.Global)\r\n\t\t\t\t\t}),\r\n\t\t\t100\r\n\t\t)\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Jumbotron globalData={globalData} />\r\n\t\t\t<MDBContainer className='text-center headings my-5'>\r\n\t\t\t\t<MDBCard>\r\n\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t<MDBCardTitle className='text-uppercase'>About</MDBCardTitle>\r\n\t\t\t\t\t\t<MDBContainer>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong className='text-primary text-uppercase'>\r\n\t\t\t\t\t\t\t\t\tEnvidStat{' '}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\telaborates to <em className='text-white'>\" </em> Environment,\r\n\t\t\t\t\t\t\t\tCovid, Statistics<em className='text-white'>\"</em>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong className='text-primary text-uppercase'>\r\n\t\t\t\t\t\t\t\t\tEnvidStat{' '}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\tis a webapp which uses real time weather data (Temperature and\r\n\t\t\t\t\t\t\t\tWind speed) to predict vulnerability of corona attack in a\r\n\t\t\t\t\t\t\t\tparticular location and visualize those datas. With this now you\r\n\t\t\t\t\t\t\t\tget to know whether it's safe for you to go outdoors and helps\r\n\t\t\t\t\t\t\t\tyou to make informed decision.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<strong className='text-primary'>\r\n\t\t\t\t\t\t\t\tMAKE INFORMED DECISIONS OF GOING OUTSIDE\r\n\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t</MDBContainer>\r\n\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t</MDBCard>\r\n\t\t\t</MDBContainer>\r\n\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<MDBRow>\r\n\t\t\t\t\t<FeaturesCard\r\n\t\t\t\t\t\ticonClass='fa fa-globe'\r\n\t\t\t\t\t\tcardTitle='Environment'\r\n\t\t\t\t\t\tcardText={`Envidstat being an webapp there is no need for downloads,\r\n\t\t\t\t\t\thence, no storage required.It is a responsive webapp, which means it\r\n\t\t\t\t\t\tadapts to any device you use to acccess it.`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FeaturesCard\r\n\t\t\t\t\t\ticonClass='fa fa-wrench'\r\n\t\t\t\t\t\tcardTitle='Covid-Update'\r\n\t\t\t\t\t\tcardText={`EnvidStat is \"Intuitive\" Envidstat is full of data\r\n\t\t\t\t\t\tvisualizations making it easier for you to process all the\r\n\t\t\t\t\t\tinformation of Covid-19 areound you.`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FeaturesCard\r\n\t\t\t\t\t\ticonClass='fas fa-chart-bar'\r\n\t\t\t\t\t\tcardTitle='Statistics'\r\n\t\t\t\t\t\tcardText={`EnvidStat is Providing probable Statictical report of Covid-19\r\n\t\t\t\t\t\tbased on the real-time Environment.`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</MDBRow>\r\n\t\t\t</MDBContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","export const API_URL_OPENSTREETMAPS =\r\n    'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n  API_COVID19_SUMMARY = 'https://api.covid19api.com/summary',\r\n  API_COVID19_COUNTRY_DATA = 'https://api.covid19api.com/live/country/',\r\n  API_COVID19_COMBINED = 'https://corona.lmao.ninja/v2/countries'\r\n","import React from 'react'\r\nimport { MDBCol, MDBRow, MDBBtn } from 'mdbreact'\r\n\r\nconst GeolocationButton = ({ onClick }) => {\r\n  const position = { bottom: '0.5rem' }\r\n\r\n  return (\r\n    <MDBRow\r\n      className='position-absolute w-100 z-index-501 mx-0'\r\n      style={position}>\r\n      <MDBCol className='d-flex justify-content-end'>\r\n        <MDBBtn\r\n          style={{\r\n            borderRadius: '50%',\r\n            padding: '1rem 1.4rem'\r\n          }}\r\n          onClick={onClick}\r\n          color='elegant'>\r\n          <i\r\n            style={{ color: '#f0f0f0' }}\r\n            className='fas fa-2x fa-map-marker-alt'></i>\r\n        </MDBBtn>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  )\r\n}\r\n\r\nexport default GeolocationButton\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBFormInline,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem\r\n} from 'mdbreact'\r\n\r\n// Get Matched Strings From an Array\r\nconst match = (str, arr, key) => {\r\n  if (str.length > 0) str = str.charAt(0).toUpperCase() + str.slice(1)\r\n  const p = Array.from(str).reduce(\r\n    (a, v, i) => `${a}[^${str.substr(i)}]*?${v}`,\r\n    ''\r\n  )\r\n  const regex = RegExp(p)\r\n  return arr.filter(elem => elem[key].match(regex))\r\n}\r\n\r\nconst SearchAutoComplete = props => {\r\n  const {\r\n    query,\r\n    onQueryChange,\r\n    onSuggestionClicked,\r\n    autocompleteData,\r\n    autocompleteKey\r\n  } = props\r\n\r\n  const [searchSuggestions, setSearchSuggestions] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (query.length > 0) {\r\n      const matchedData = match(query, autocompleteData, autocompleteKey),\r\n        top5match = matchedData.slice(0, 5)\r\n      setSearchSuggestions(top5match)\r\n    } else setSearchSuggestions([])\r\n  }, [query, autocompleteData, autocompleteKey])\r\n\r\n  const onSuggestionClick = e => {\r\n    // TODO: fill full name\r\n    setSearchSuggestions([])\r\n    onSuggestionClicked(e)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MDBRow className='position-absolute w-100 z-index-501 mx-0'>\r\n        <MDBCol className='d-flex mt-2 justify-content-center'>\r\n          <MDBCard style={{ width: '22rem', maxWidth: '75%' }}>\r\n            <MDBCardBody className='py-0 pr-0'>\r\n              <MDBFormInline className='md-form my-2'>\r\n                <MDBIcon icon='search' />\r\n                <input\r\n                  className='form-control form-control-sm ml-3 w-75'\r\n                  type='text'\r\n                  placeholder='Search'\r\n                  aria-label='Search'\r\n                  value={query}\r\n                  onChange={onQueryChange}\r\n                />\r\n              </MDBFormInline>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n\r\n      {searchSuggestions.length > 0 ? (\r\n        <MDBRow className='position-absolute w-100 z-index-501 mx-0 mt-5'>\r\n          <MDBCol className='d-flex mt-2 justify-content-center'>\r\n            <MDBCard style={{ width: '22rem', maxWidth: '75%' }}>\r\n              <MDBCardBody className='p-0 mt-3'>\r\n                <MDBListGroup style={{ width: '100%' }}>\r\n                  {searchSuggestions.map(searchSuggestion => (\r\n                    <MDBListGroupItem\r\n                      key={searchSuggestion.countryInfo._id}\r\n                      id={JSON.stringify(searchSuggestion)}\r\n                      onClick={onSuggestionClick}>\r\n                      {searchSuggestion[autocompleteKey]}\r\n                    </MDBListGroupItem>\r\n                  ))}\r\n                </MDBListGroup>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchAutoComplete\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Icon } from 'leaflet'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport HeatmapLayer from 'react-leaflet-heatmap-layer'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport request from 'axios'\r\n\r\nimport './Maps.css'\r\n\r\nimport { API_URL_OPENSTREETMAPS, API_COVID19_COMBINED } from '../../config'\r\n\r\nimport GeolocationButton from './GeoLocationButton'\r\nimport SearchAutoComplete from './SearchAutoComplete'\r\n\r\nconst DEFAULT = {\r\n  country: {\r\n    country: 'country',\r\n    countryInfo: { lat: 0, long: 0 }\r\n  },\r\n  coordinates: [23.8, 90.4],\r\n  geoJSON: {\r\n    type: 'FeatureCollection',\r\n    features: [\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          country: 'country'\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [0, 0]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nconst Maps = () => {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [currentPosition, setCurrentPosition] = useState(DEFAULT.coordinates)\r\n  const [currentCountry, setCurrentCountry] = useState(DEFAULT.country)\r\n  const [geoJSON, setGeoJSON] = useState(DEFAULT.geoJSON)\r\n  const [countryBubble, setCountryBubble] = useState(null)\r\n\r\n  const [countries, setCountries] = useState([]) // TODO: Move to central context\r\n\r\n  const setGPSLocation = () =>\r\n    navigator.geolocation\r\n      ? navigator.geolocation.getCurrentPosition(pos => {\r\n          const { latitude, longitude } = pos.coords\r\n          setCurrentPosition([pos.coords.latitude, pos.coords.longitude])\r\n          setCurrentCountry({\r\n            country: 'country',\r\n            countryInfo: { lat: latitude, long: longitude }\r\n          })\r\n        })\r\n      : console.log('GPS Not Supported')\r\n\r\n  useEffect(() => {\r\n    setGPSLocation()\r\n    request(API_COVID19_COMBINED)\r\n      .then(res => res.data)\r\n      .then(res => setCountries(res))\r\n      .catch(() => console.log('error fetching data'))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setGeoJSON({\r\n      type: 'FeatureCollection',\r\n      features: countries.map((country = {}) => {\r\n        const { countryInfo = {} } = country\r\n        const { lat, long } = countryInfo\r\n        return {\r\n          type: 'Feature',\r\n          properties: {\r\n            ...country\r\n          },\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: [long, lat]\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }, [countries])\r\n\r\n  useEffect(() => {\r\n    const { lat, long } = currentCountry.countryInfo\r\n    setCurrentPosition([lat, long])\r\n    setSearchQuery('')\r\n  }, [currentCountry])\r\n\r\n  const onSearchQueryChange = event => setSearchQuery(event.target.value)\r\n  const onSearchSuggestionClicked = autocompleteEvent =>\r\n    setCurrentCountry(JSON.parse(autocompleteEvent.target.id))\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <div className='mt-4 z-depth-1-half map-container position-relative'>\r\n        <SearchAutoComplete\r\n          query={searchQuery}\r\n          onQueryChange={onSearchQueryChange}\r\n          onSuggestionClicked={onSearchSuggestionClicked}\r\n          autocompleteData={countries}\r\n          autocompleteKey='country'\r\n        />\r\n\r\n        <GeolocationButton onClick={setGPSLocation} />\r\n\r\n        <Map center={currentPosition} zoom={12}>\r\n          <TileLayer\r\n            url={API_URL_OPENSTREETMAPS}\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {/* <HeatmapLayer\r\n            // fitBoundsOnLoad\r\n            // fitBoundsOnUpdate\r\n            points={addressPoints}\r\n            latitudeExtractor={m => m[0]}\r\n            longitudeExtractor={m => m[1]}\r\n            intensityExtractor={m => parseFloat(m[2])}\r\n          />\r\n          */}\r\n          <Marker\r\n            position={currentPosition}\r\n            onClick={() => {\r\n              const feature = { ...DEFAULT.geoJSON.features[0] }\r\n              feature.properties = {\r\n                country: 'Your Location',\r\n                cases: 0\r\n              }\r\n              feature.geometry.coordinates = [\r\n                currentPosition[1],\r\n                currentPosition[0]\r\n              ]\r\n              setCountryBubble(feature)\r\n            }}\r\n          />\r\n          {geoJSON.features.map((feature, i) => (\r\n            <Marker\r\n              key={i}\r\n              position={[\r\n                feature.geometry.coordinates[1],\r\n                feature.geometry.coordinates[0]\r\n              ]}\r\n              onClick={() => setCountryBubble(feature)}\r\n            />\r\n          ))}\r\n          {countryBubble && (\r\n            <Popup\r\n              position={[\r\n                countryBubble.geometry.coordinates[1] + 0.02,\r\n                countryBubble.geometry.coordinates[0]\r\n              ]}\r\n              onClose={() => {\r\n                setCountryBubble(null)\r\n              }}>\r\n              <div>\r\n                <h2>{countryBubble.properties.country}</h2>\r\n                <p>{countryBubble.properties.cases}</p>\r\n              </div>\r\n              countryBubble\r\n            </Popup>\r\n          )}\r\n        </Map>\r\n      </div>\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default Maps\r\n","const width = 100,\r\n\tsort = 'asc'\r\n\r\nexport default [\r\n\t{\r\n\t\tlabel: 'Country',\r\n\t\tfield: 'Country',\r\n\t\tsort,\r\n\t\twidth\r\n\t},\r\n\t{\r\n\t\tlabel: 'New Confirmed',\r\n\t\tfield: 'NewConfirmed',\r\n\t\tsort,\r\n\t\twidth\r\n\t},\r\n\t{\r\n\t\tlabel: 'New Deaths',\r\n\t\tfield: 'NewDeaths',\r\n\t\tsort,\r\n\t\twidth\r\n\t},\r\n\t{\r\n\t\tlabel: 'New Recovered',\r\n\t\tfield: 'NewRecovered',\r\n\t\tsort,\r\n\t\twidth\r\n\t},\r\n\t{\r\n\t\tlabel: 'Total Confirmed',\r\n\t\tfield: 'TotalConfirmed',\r\n\t\tsort,\r\n\t\twidth\r\n\t},\r\n\t{\r\n\t\tlabel: 'Total Deaths',\r\n\t\tfield: 'TotalDeaths',\r\n\t\tsort,\r\n\t\twidth\r\n\t},\r\n\t{\r\n\t\tlabel: 'Total Recovered',\r\n\t\tfield: 'TotalRecovered',\r\n\t\tsort,\r\n\t\twidth\r\n\t}\r\n]\r\n","const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n\tspreadData = [65, 59, 80, 81, 56, 55, 40],\r\n\tweatherData = [28, 48, 40, 19, 86, 27, 90]\r\n\r\nexport default {\r\n\tlabels,\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: 'Spread',\r\n\t\t\tfill: true,\r\n\t\t\tlineTension: 0.3,\r\n\t\t\tbackgroundColor: 'rgba(225, 204,230, .3)',\r\n\t\t\tborderColor: 'rgb(205, 130, 158)',\r\n\t\t\tborderCapStyle: 'butt',\r\n\t\t\tborderDash: [],\r\n\t\t\tborderDashOffset: 0.0,\r\n\t\t\tborderJoinStyle: 'miter',\r\n\t\t\tpointBorderColor: 'rgb(205, 130,1 58)',\r\n\t\t\tpointBackgroundColor: 'rgb(255, 255, 255)',\r\n\t\t\tpointBorderWidth: 10,\r\n\t\t\tpointHoverRadius: 5,\r\n\t\t\tpointHoverBackgroundColor: 'rgb(0, 0, 0)',\r\n\t\t\tpointHoverBorderColor: 'rgba(220, 220, 220,1)',\r\n\t\t\tpointHoverBorderWidth: 2,\r\n\t\t\tpointRadius: 1,\r\n\t\t\tpointHitRadius: 10,\r\n\t\t\tdata: spreadData\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Weather',\r\n\t\t\tfill: true,\r\n\t\t\tlineTension: 0.3,\r\n\t\t\tbackgroundColor: 'rgba(184, 185, 210, .3)',\r\n\t\t\tborderColor: 'rgb(35, 26, 136)',\r\n\t\t\tborderCapStyle: 'butt',\r\n\t\t\tborderDash: [],\r\n\t\t\tborderDashOffset: 0.0,\r\n\t\t\tborderJoinStyle: 'miter',\r\n\t\t\tpointBorderColor: 'rgb(35, 26, 136)',\r\n\t\t\tpointBackgroundColor: 'rgb(255, 255, 255)',\r\n\t\t\tpointBorderWidth: 10,\r\n\t\t\tpointHoverRadius: 5,\r\n\t\t\tpointHoverBackgroundColor: 'rgb(0, 0, 0)',\r\n\t\t\tpointHoverBorderColor: 'rgba(220, 220, 220, 1)',\r\n\t\t\tpointHoverBorderWidth: 2,\r\n\t\t\tpointRadius: 1,\r\n\t\t\tpointHitRadius: 10,\r\n\t\t\tdata: weatherData\r\n\t\t}\r\n\t]\r\n}\r\n","import prediction_data from './prediction_data'\r\n\r\nexport default {\r\n  columns: [\r\n    {\r\n      label: \"Country\",\r\n      field: \"Country\",\r\n      sort: \"asc\",\r\n      width: 150\r\n    },\r\n    {\r\n      label: \"Wind\",\r\n      field: \"WND\",\r\n      sort: \"asc\",\r\n      width: 270\r\n    },\r\n    {\r\n      label: \"Temperature\",\r\n      field: \"TEMP\",\r\n      sort: \"asc\",\r\n      width: 200\r\n    },\r\n    {\r\n      label: \"Threat Level\",\r\n      field: \"THREAT_LEVEL\",\r\n      sort: \"asc\",\r\n      width: 100\r\n    }\r\n  ],\r\n  rows: prediction_data\r\n};\r\n","export default [\r\n\t{\r\n\t\tCountry: 'London',\r\n\t\tWND: 4.6,\r\n\t\tTEMP: 71.6,\r\n\t\tTHREAT_LEVEL: 'SAFE'\r\n\t},\r\n\t{\r\n\t\tCountry: 'USA',\r\n\t\tWND: 2.6,\r\n\t\tTEMP: 77,\r\n\t\tTHREAT_LEVEL: 'SAFE'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Turkey',\r\n\t\tWND: 2.6,\r\n\t\tTEMP: 73.4,\r\n\t\tTHREAT_LEVEL: 'SAFE'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Morocco',\r\n\t\tWND: 1.5,\r\n\t\tTEMP: 64,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Bangladesh',\r\n\t\tWND: 2.6,\r\n\t\tTEMP: 82.4,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'India',\r\n\t\tWND: 2.69,\r\n\t\tTEMP: 60.8,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Pakistan',\r\n\t\tWND: 3.21,\r\n\t\tTEMP: 67.7,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Indonesia',\r\n\t\tWND: 1,\r\n\t\tTEMP: 77,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Brazil',\r\n\t\tWND: 4.1,\r\n\t\tTEMP: 67.7,\r\n\t\tTHREAT_LEVEL: 'Risk'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Canada',\r\n\t\tWND: 1.34,\r\n\t\tTEMP: 76,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Japan',\r\n\t\tWND: 4.6,\r\n\t\tTEMP: 68.8,\r\n\t\tTHREAT_LEVEL: 'Risk'\r\n\t},\r\n\t{\r\n\t\tCountry: '\\tEgypt',\r\n\t\tWND: 6.2,\r\n\t\tTEMP: 63.41,\r\n\t\tTHREAT_LEVEL: 'Risk'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Germany',\r\n\t\tWND: 3.45,\r\n\t\tTEMP: 59.882,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Uganda',\r\n\t\tWND: 0.94,\r\n\t\tTEMP: 70.304,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Peru',\r\n\t\tWND: 2.91,\r\n\t\tTEMP: 60.926,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Malaysia',\r\n\t\tWND: 1,\r\n\t\tTEMP: 78.8,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Nepal',\r\n\t\tWND: 1.53,\r\n\t\tTEMP: 68.486,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Burundi',\r\n\t\tWND: 2.08,\r\n\t\tTEMP: 62.042,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t},\r\n\t{\r\n\t\tCountry: 'Tunisia',\r\n\t\tWND: 2.6,\r\n\t\tTEMP: 84.2,\r\n\t\tTHREAT_LEVEL: 'Safe'\r\n\t}\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { MDBContainer, MDBDataTable, MDBRow, MDBCol } from 'mdbreact'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nimport { API_COVID19_SUMMARY } from '../../config'\r\n\r\nimport summaryDataColumns from './summary_data_columns'\r\nimport dataLine from './data_line'\r\nimport prediction from './prediction_data_columns'\r\n\r\nconst Statistics = () => {\r\n\tconst [summaryData, setSummaryData] = useState({ Countries: [] })\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(\r\n\t\t\t() =>\r\n\t\t\t\tfetch(API_COVID19_SUMMARY)\r\n\t\t\t\t\t.then(res => res.json())\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tsetSummaryData(res)\r\n\t\t\t\t\t}),\r\n\t\t\t100\r\n\t\t)\r\n\t}, [])\r\n\r\n\tconst continuousFetch = () => {\r\n\t\tlet retries = 0\r\n\t\tlet data = ''\r\n\t\tlet fetchDataTimer\r\n\r\n\t\tconst fetchJson = () => Promise.reject({ data: false })\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst fetchedData = await fetchJson()\r\n\t\t\t\t.then(res => JSON.parse(res))\r\n\t\t\t\t.then(res => res.data)\r\n\t\t\t\t.catch(err => false)\r\n\t\t\tconsole.log('fetched', fetchedData)\r\n\r\n\t\t\tif (fetchedData) {\r\n\t\t\t\tclearInterval(fetchDataTimer)\r\n\t\t\t\tdata = fetchedData\r\n\t\t\t\tconsole.log('success', 'data', data)\r\n\t\t\t} else {\r\n\t\t\t\tretries++\r\n\t\t\t\tif (retries >= 5) {\r\n\t\t\t\t\tclearInterval(fetchDataTimer)\r\n\t\t\t\t\tconsole.log('failed')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchDataTimer = setInterval(fetchData, 1000)\r\n\t}\r\n\r\n\tconst data = {\r\n\t\tcolumns: summaryDataColumns,\r\n\t\trows: summaryData.Countries\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<h3 className='mt-5'>COVID-19 Spread Rate Visualization</h3>\r\n\t\t\t\t<MDBRow className='d-flex justify-content-center'>\r\n\t\t\t\t\t<MDBCol md='6'>\r\n\t\t\t\t\t\t<Line data={dataLine} options={{ responsive: true }} />\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t</MDBRow>\r\n\t\t\t</MDBContainer>\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<h3 className='mt-5'>World Data</h3>\r\n\t\t\t\t<MDBDataTable\r\n\t\t\t\t\tscrollY\r\n\t\t\t\t\tscrollX\r\n\t\t\t\t\tmaxHeight='200px'\r\n\t\t\t\t\tstriped\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\tsmall\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t/>\r\n\t\t\t</MDBContainer>\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<h3 className='mt-5'>Our Prediction</h3>\r\n\t\t\t\t<MDBDataTable\r\n\t\t\t\t\tscrollY\r\n\t\t\t\t\tscrollX\r\n\t\t\t\t\tmaxHeight='200px'\r\n\t\t\t\t\tstriped\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\tsmall\r\n\t\t\t\t\tdata={prediction}\r\n\t\t\t\t/>\r\n\t\t\t</MDBContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Statistics\r\n","import React from 'react'\r\nimport {\r\n\tMDBCard,\r\n\tMDBCardBody,\r\n\tMDBCardImage,\r\n\tMDBCardTitle,\r\n\tMDBCardText,\r\n\tMDBCol,\r\n\tMDBView\r\n} from 'mdbreact'\r\n\r\nimport './ContributorCard.css'\r\n\r\nconst ContributorCard = props => {\r\n\treturn (\r\n\t\t<MDBCol md='4' className='my-2'>\r\n\t\t\t<MDBCard wide cascade className='h-100'>\r\n\t\t\t\t<MDBView cascade>\r\n\t\t\t\t\t<MDBCardImage\r\n\t\t\t\t\t\tclassName='card-img-top'\r\n\t\t\t\t\t\thover\r\n\t\t\t\t\t\toverlay='white-light'\r\n\t\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/assets/img/${props.image}.jpg`}\r\n\t\t\t\t\t\talt={props.image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</MDBView>\r\n\t\t\t\t<MDBCardBody cascade className='text-center'>\r\n\t\t\t\t\t<MDBCardTitle className='card-title blue-text'>\r\n\t\t\t\t\t\t<strong>{props.title}</strong>\r\n\t\t\t\t\t</MDBCardTitle>\r\n\t\t\t\t\t<MDBCardText>{props.subtitle}</MDBCardText>\r\n\t\t\t\t</MDBCardBody>\r\n\t\t\t</MDBCard>\r\n\t\t</MDBCol>\r\n\t)\r\n}\r\n\r\nexport default ContributorCard\r\n","import React from 'react'\r\nimport {\r\n\tMDBRow,\r\n\tMDBCol,\r\n\tMDBContainer\r\n} from 'mdbreact'\r\n\r\nimport ContributorCard from './ContributorCard'\r\n\r\nconst About = () => {\r\n\treturn (\r\n\t\t<MDBContainer className='mt-4'>\r\n\t\t\t<MDBRow>\r\n\t\t\t\t<MDBCol>\r\n\t\t\t\t\t<h2 className='text-center font-weight-bold text-uppercase'>\r\n\t\t\t\t\t\tContributors\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t</MDBCol>\r\n\t\t\t</MDBRow>\r\n\t\t\t<MDBRow>\r\n\t\t\t\t<ContributorCard\r\n\t\t\t\t\timage='propic-abrar'\r\n\t\t\t\t\ttitle='Abrar Shahriar Abeed'\r\n\t\t\t\t\tsubtitle='Video Editor'\r\n\t\t\t\t/>\r\n\t\t\t\t<ContributorCard\r\n\t\t\t\t\timage='propic-adnan'\r\n\t\t\t\t\ttitle='Adnan Hossain'\r\n\t\t\t\t\tsubtitle='Data Scrapper and Modeller'\r\n\t\t\t\t/>\r\n\t\t\t\t<ContributorCard\r\n\t\t\t\t\timage='propic-mishar'\r\n\t\t\t\t\ttitle='Sheikh Mishar Newaz'\r\n\t\t\t\t\tsubtitle='UI designer and Data Visualizer'\r\n\t\t\t\t/>\r\n\t\t\t\t<ContributorCard\r\n\t\t\t\t\timage='propic-nafis'\r\n\t\t\t\t\ttitle='Nafis Mostafa'\r\n\t\t\t\t\tsubtitle='Data Model and Machine Learning Specialist'\r\n\t\t\t\t/>\r\n\t\t\t\t<ContributorCard\r\n\t\t\t\t\timage='propic-rawha'\r\n\t\t\t\t\ttitle='Rawha Mikdad'\r\n\t\t\t\t\tsubtitle='UI,UX designer and Data Miner'\r\n\t\t\t\t/>\r\n\t\t\t\t<ContributorCard\r\n\t\t\t\t\timage='propic-shormi'\r\n\t\t\t\t\ttitle='Shanjida Habib Shormi'\r\n\t\t\t\t\tsubtitle='Content Writer and Data Miner'\r\n\t\t\t\t/>\r\n\t\t\t</MDBRow>\r\n\t\t</MDBContainer>\r\n\t)\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBContainer\r\n} from \"mdbreact\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false\r\n    };\r\n  }\r\n\r\n  onClick = () => {\r\n    this.setState({\r\n      collapse: !this.state.collapse\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { pathname } = this.props;\r\n    const { collapse } = this.state;\r\n\r\n    return (\r\n      <header>\r\n        <MDBNavbar\r\n          color=\"elegant-color\"\r\n          className={pathname === \"/\" ? \"no-shadow\" : \"\"}\r\n          fixed=\"top\"\r\n          dark\r\n          transparent={pathname === \"/\" && !collapse}\r\n          expand=\"md\"\r\n          scrolling\r\n        >\r\n          <MDBContainer>\r\n            <MDBNavbarBrand href=\"/\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/img/logo-color-sm.png`}\r\n                className=\"img-fluid\"\r\n                alt=\"navlogo-envidstat\"\r\n              />\r\n              <strong>\r\n                ENVID\r\n                <span className=\"text-primary\">STAT</span>\r\n              </strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarToggler onClick={this.onClick} />\r\n            <MDBCollapse isOpen={collapse} navbar>\r\n              <MDBNavbarNav right>\r\n                <MDBNavItem active={pathname === \"/\"}>\r\n                  <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem active={pathname === \"/maps\"}>\r\n                  <MDBNavLink to=\"/maps\">Maps</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem active={pathname === \"/statistics\"}>\r\n                  <MDBNavLink to=\"/statistics\">Statistics</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem active={pathname === \"/about\"}>\r\n                  <MDBNavLink to=\"/about\">About</MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNavbarNav>\r\n            </MDBCollapse>\r\n          </MDBContainer>\r\n        </MDBNavbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBFooter, MDBRow, MDBCol } from \"mdbreact\";\r\n\r\nconst Footer = () => (\r\n  <MDBFooter color=\"elegant-color\" className=\"font-small pt-4 mt-4\">\r\n    <MDBContainer fluid className=\"text-center text-md-left\">\r\n      <MDBRow>\r\n        <MDBCol className=\"text-center\">\r\n          <p className=\"h5 text-uppercase font-weight-normal\">Regards</p>\r\n          <p>\r\n            ENVIDSTAT is a real time data providing web app which will help the\r\n            users to take precautions for the novel corona virus by using the\r\n            weather statistics. It is easily accessible and comprehensible by\r\n            anyone. From this web app user can easily see the risk predictions\r\n            of stepping out. Here, real time environmental data like\r\n            temperature, wind-speed has been used to predict the risk of\r\n            spreading of the virus to that region. Moreover,the web ap ENVIDSTAT\r\n            is a real time data providing web app which will help the users to\r\n            take precautions for the novel corona virus by using the weather\r\n            statistics. Therefore, this Web-app will notify people by mailing\r\n            them if they subscribe in the web-App . This app will automatically\r\n            send report of his location regularly by email and Subscriber will\r\n            definitely get information easily and regularly.\r\n          </p>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    <div className=\"footer-copyright text-center py-3 bg-dark\">\r\n      <MDBContainer fluid>\r\n        &copy; {new Date().getFullYear()} Copyright: BRACU Duronto\r\n      </MDBContainer>\r\n    </div>\r\n  </MDBFooter>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport { Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Home from './components/Home/Home'\r\nimport Maps from './components/Maps/Maps'\r\nimport Statistics from './components/Statistics/Statistics'\r\nimport About from './components/About/About'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Footer from './components/Footer/Footer'\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n\tconst { pathname } = useLocation()\r\n\r\n\tconst spacingClasses = pathname === '/' ? '' : 'mt-5 pt-4'\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar pathname={pathname} />\r\n\t\t\t<div className={`componentsContainer ${spacingClasses}`}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/' component={Home} />\r\n\t\t\t\t\t<Route exact path='/maps' component={Maps} />\r\n\t\t\t\t\t<Route exact path='/statistics' component={Statistics} />\r\n\t\t\t\t\t<Route exact path='/about' component={About} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\nimport 'bootstrap-css-only/css/bootstrap.min.css'\r\nimport 'mdbreact/dist/css/mdb.css'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<App />\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}